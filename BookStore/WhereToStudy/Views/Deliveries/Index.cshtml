@using BookStore.ViewModels
@model BookStore.ViewModels.SaleViewModel

<form action="/Deliveries/Index" method="post">



    <div id="itemsList">
        @if (Model.Items.Count > 0)
        {
            <h3>Въведете артикулите от доставката: </h3>
        }

        @for (int i = 0; i < Model.Items.Count; i++)
        {
            <div class="itemRow">
                @Html.DropDownList("Items[" + i + "].Name", Model.Items[i].ItemsTypeSelectListItems, new { @class = "itemName" })
                @Html.TextBoxFor(model => Model.Items[i].Quantity, new { @class = "quantity" })
                <a href="javascript:void(0);" class="remRow">Премахни</a>
            </div>
            <br />
        }
    </div>

    <p>
        <a href="javascript:void(0);" class="addRow">Добави нова стока</a>
    </p>

    <p>
        <input type="submit" name="btnSubmit" value="Запази доставката" />
    </p>

</form>



<script type="text/javascript" src="../../Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">

$(document).ready(function () {

    $(".addRow").click(function () {

        var rowCount = $('.itemRow').length;
        $("#itemsList").append('<div class="itemRow"><select name="Items[' + rowCount + '].Name" class="itemName">@foreach (SelectListItem item in new Item().ItemsTypeSelectListItems)
        {<option value="@item.Value" >@item.Text</option>}</select><input type="text" name="Items[' + rowCount + '].Quantity" class="quantity" style:"margin:10px;" /><a href="javascript:void(0);" class="remRow">Премахни</a></div><br/>');
    });

    $("#itemsList").on('click', '.remRow', function () {

        $(this).closest('.itemRow').remove();

        $('.itemName').each(function (index) {
            $(this).attr('name', 'Items[' + index + '].Name');
        });

        $('.quantity').each(function (index) {
            $(this).attr('name', 'Items[' + index + '].Quantity');
        });
    })
});

</script>